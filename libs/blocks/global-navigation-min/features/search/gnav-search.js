import{toFragment as e,isDesktop as t,setCurtainState as s,trigger as i,closeAllDropdowns as r,logErrorFor as a}from"../../utilities/utilities.js";import{replaceKeyArray as l}from"../../../../features/placeholders.js";import{getConfig as n,getFedsPlaceholderConfig as h}from"../../../../utils/utils.js";import{debounce as c}from"../../../../utils/action.js";const o={scope:"adobecom",apiKey:"adobedotcom2"},u={hasResults:"has-results",inputIsPopulated:"feds-search-input--isPopulated"},{locale:d}=n(),[,p="US"]=d.ietf.split("-");class g{constructor(e){this.icon=e.icon,this.trigger=e.trigger,this.parent=this.trigger.closest(".feds-nav-wrapper");new MutationObserver((()=>{this.clearSearchForm()})).observe(this.trigger,{attributeFilter:["aria-expanded"]}),a(this.init.bind(this),"Search init has failed","errorType=e,module=gnav-search")}async init(){await this.getLabels(),this.decorate(),this.addEventListeners(),this.toggleDropdown()}async getLabels(){this.labels={},[this.labels.search,this.labels.clearResults,this.labels.tryAdvancedSearch]=await l(["search","clear-results","try-advanced-search"],h())}decorate(){this.input=e`<input placeholder="${this.labels.search}" aria-label="${this.labels.search}" class="feds-search-input" autocomplete="off" aria-autocomplete="list" aria-controls="feds-search-results" daa-ll="search-results:standard search" />`,this.resultsList=e`<ul class="feds-search-results" id="feds-search-results" role="region" daa-ll="search-results:suggested-search:click"></ul>`,this.clearButton=e`<button tabindex="0" class="feds-search-clear" aria-label="${this.labels.clearResults}"></button>`,this.searchBar=e`
      <aside class="feds-search-dropdown">
        <div class="feds-search-bar">
          <div class="feds-search-field">
            ${this.input}
            <div class="feds-search-icons">
              ${this.icon}
              ${this.clearButton}
            </div>
          </div>
          ${this.resultsList}
        </div>
      </aside>`,this.trigger.after(this.searchBar)}clearSearchForm(){this.input.value="",this.onSearchInput()}addEventListeners(){this.trigger.addEventListener("click",(()=>{this.toggleDropdown()})),this.input.addEventListener("input",(()=>{this.onSearchInput()})),this.input.addEventListener("keydown",(e=>{if("Escape"===e.code&&(this.input.value.length?this.clearSearchForm():t.matches&&(r(),this.trigger.focus())),"Enter"===e.code){if(!this.query)return;window.location.href=g.getHelpxLink(this.query)}})),this.resultsList.addEventListener("keydown",(e=>{"Escape"===e.code&&this.input.focus()})),this.clearButton.addEventListener("click",(()=>{this.clearSearchForm(),this.input.focus()})),t.addEventListener("change",(()=>{r()}))}getSuggestions(e=this.query){const{env:t}=n(),s=`https://${"prod"===t?"adobesearch":"adobesearch-stage"}.adobe.io/autocomplete/completions?q[locale]=${d.ietf}&scope=${o.scope}&q[text]=${encodeURIComponent(e)}`;return fetch(s,{headers:{"x-api-key":o.apiKey}}).then((e=>e.json())).catch((()=>{}))}onSearchInput=c((()=>{const e=this.getQuery();if(!e.length)return this.resultsList.replaceChildren(),void delete this.query;e!==this.query&&(this.query=e,this.getSuggestions().then((e=>{const t=e?.suggested_completions;if(!Array.isArray(t)||!t.length)return this.resultsList.replaceChildren(this.getNoResultsTemplate()),void(this.parent instanceof HTMLElement&&this.parent.classList.remove(u.hasResults));this.resultsList.replaceChildren(this.getResultsTemplate(t)),this.parent instanceof HTMLElement&&this.parent.classList.add(u.hasResults)})).catch((()=>{this.resultsList.replaceChildren(this.getNoResultsTemplate()),this.parent instanceof HTMLElement&&this.parent.classList.remove(u.hasResults)})))}),150);getQuery(){const e=this.input.value.trim();return e.length?(this.input.classList.add(u.inputIsPopulated),e):(this.input.classList.remove(u.inputIsPopulated),this.resultsList.replaceChildren(),this.parent instanceof HTMLElement&&this.parent.classList.remove(u.hasResults),"")}getResultsTemplate(t){const s=document.createDocumentFragment();return t.map((t=>{const i=t.name;if(!i.length)return;const r=(()=>{let e=0;const t=this.query.length;for(;e<t&&this.query[e].toLowerCase()===i[e].toLowerCase();)e+=1;return this.query.substring(0,e).trim()})(),a=new RegExp(`(${r})`,"i");let l;const n=i.replace(a,(e=>(l=e,""))),h=e`<li>
          <a href="${g.getHelpxLink(i)}" class="feds-search-result" aria-label="${i}">
            <span>${l}</span>${n}
          </a>
        </li>`;s.appendChild(h)})),s}getNoResultsTemplate(t=this.query){return e`<li>
      <a href="${g.getHelpxLink(t)}" class="feds-search-result"><span>${this.labels.tryAdvancedSearch}</span></a>
    </li>`}focusInput(){t.matches&&this.input.focus()}toggleDropdown(){if(!t.matches)return;i({element:this.trigger})?(s(!0),this.focusInput()):this.clearSearchForm()}static getHelpxLink(e){return`https://helpx.adobe.com${d.prefix}/globalsearch.html?q=${encodeURIComponent((e||"").trim())}&start_index=0&country=${p}`}}export default g;